"use strict";(self.webpackChunkrke_docs=self.webpackChunkrke_docs||[]).push([[9375],{2323:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var s=r(5893),n=r(1151);const i={title:"Custom Certificates"},c=void 0,d={id:"installation/certs/certs",title:"Custom Certificates",description:"Available as of v0.2.0",source:"@site/docs/installation/certs/certs.md",sourceDirName:"installation/certs",slug:"/installation/certs/",permalink:"/installation/certs/",draft:!1,unlisted:!1,editUrl:"https://github.com/rancher/rke1-docs/edit/main/docs/installation/certs/certs.md",tags:[],version:"current",lastUpdatedAt:1704844723,formattedLastUpdatedAt:"Jan 9, 2024",frontMatter:{title:"Custom Certificates"},sidebar:"mySidebar",previous:{title:"RKE Kubernetes Installation",permalink:"/installation/"},next:{title:"Upgrades",permalink:"/upgrades/"}},a={},l=[{value:"Using Custom Certificates",id:"using-custom-certificates",level:2},{value:"Certificates",id:"certificates",level:2},{value:"Generating Certificate Signing Requests (CSRs) and Keys",id:"generating-certificate-signing-requests-csrs-and-keys",level:2}];function o(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Available as of v0.2.0"})}),"\n",(0,s.jsx)(t.p,{children:"By default, Kubernetes clusters require certificates and RKE auto-generates the certificates for all the Kubernetes services. RKE can also use custom certificates for these Kubernetes services."}),"\n",(0,s.jsxs)(t.p,{children:["When ",(0,s.jsx)(t.a,{href:"/installation/#deploying-kubernetes-with-rke",children:"deploying Kubernetes with RKE"}),", there are two additional options that can be used with ",(0,s.jsx)(t.code,{children:"rke up"})," so that RKE uses custom certificates."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Option"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"--custom-certs"})}),(0,s.jsxs)(t.td,{children:["Use custom certificates from a cert dir. The default directory is ",(0,s.jsx)(t.code,{children:"/cluster_certs"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"--cert-dir"})," value"]}),(0,s.jsx)(t.td,{children:"Specify a certificate dir path"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"using-custom-certificates",children:"Using Custom Certificates"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"# Use certificates located in the default directory `/cluster_certs`\n$ rke up --custom-certs\n\n# Use certificates located in your own directory\n$ rke up --custom-certs --cert-dir ~/my/own/certs\n"})}),"\n",(0,s.jsx)(t.h2,{id:"certificates",children:"Certificates"}),"\n",(0,s.jsx)(t.p,{children:"The following certificates must exist in the certificate directory."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Certificate"}),(0,s.jsx)(t.th,{children:"Key"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Master CA"}),(0,s.jsx)(t.td,{children:"kube-ca.pem"}),(0,s.jsx)(t.td,{children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube API"}),(0,s.jsx)(t.td,{children:"kube-apiserver.pem"}),(0,s.jsx)(t.td,{children:"kube-apiserver-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube Controller Manager"}),(0,s.jsx)(t.td,{children:"kube-controller-manager.pem"}),(0,s.jsx)(t.td,{children:"kube-controller-manager-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube Scheduler"}),(0,s.jsx)(t.td,{children:"kube-scheduler.pem"}),(0,s.jsx)(t.td,{children:"kube-scheduler-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube Proxy"}),(0,s.jsx)(t.td,{children:"kube-proxy.pem"}),(0,s.jsx)(t.td,{children:"kube-proxy-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube Admin"}),(0,s.jsx)(t.td,{children:"kube-admin.pem"}),(0,s.jsx)(t.td,{children:"kube-admin-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube Node"}),(0,s.jsx)(t.td,{children:"kube-node.pem"}),(0,s.jsx)(t.td,{children:"kube-node-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Apiserver Proxy Client"}),(0,s.jsx)(t.td,{children:"kube-apiserver-proxy-client.pem"}),(0,s.jsx)(t.td,{children:"kube-apiserver-proxy-client-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Etcd Nodes"}),(0,s.jsx)(t.td,{children:"kube-etcd-x-x-x-x.pem"}),(0,s.jsx)(t.td,{children:"kube-etcd-x-x-x-x-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Kube Api Request Header CA"}),(0,s.jsx)(t.td,{children:"kube-apiserver-requestheader-ca.pem*"}),(0,s.jsx)(t.td,{children:"kube-apiserver-requestheader-ca-key.pem"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Service Account Token"}),(0,s.jsx)(t.td,{children:"-"}),(0,s.jsx)(t.td,{children:"kube-service-account-token-key.pem"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"* Is the same as kube-ca.pem"}),"\n",(0,s.jsx)(t.h2,{id:"generating-certificate-signing-requests-csrs-and-keys",children:"Generating Certificate Signing Requests (CSRs) and Keys"}),"\n",(0,s.jsxs)(t.p,{children:["If you want to create and sign the certificates by a real Certificate Authority (CA), you can use RKE to generate a set of Certificate Signing Requests (CSRs) and keys. Using the ",(0,s.jsx)(t.code,{children:"rke cert generate-csr"})," command, you can generate the CSRs and keys."]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Set up your ",(0,s.jsx)(t.code,{children:"cluster.yml"})," with the ",(0,s.jsx)(t.a,{href:"/config-options/nodes/",children:"node information"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"rke cert generate-csr"})," to generate certificates for the node(s) in the ",(0,s.jsx)(t.code,{children:"cluster.yml"}),". By default, the CSRs and keys will be saved in ",(0,s.jsx)(t.code,{children:"./cluster_certs"}),". To have them saved in a different directory, use ",(0,s.jsx)(t.code,{children:"--cert-dir"})," to define what directory to have them saved in."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"$ rke cert generate-csr\nINFO[0000] Generating Kubernetes cluster CSR certificates\nINFO[0000] [certificates] Generating Kubernetes API server csr\nINFO[0000] [certificates] Generating Kube Controller csr\nINFO[0000] [certificates] Generating Kube Scheduler csr\nINFO[0000] [certificates] Generating Kube Proxy csr\nINFO[0001] [certificates] Generating Node csr and key\nINFO[0001] [certificates] Generating admin csr and kubeconfig\nINFO[0001] [certificates] Generating Kubernetes API server proxy client csr\nINFO[0001] [certificates] Generating etcd-x.x.x.x csr and key\nINFO[0001] Successfully Deployed certificates at [./cluster_certs]\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"In addition to the CSRs, you also need to generate the kube-service-account-token-key.pem key. To do this, run the following:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./cluster_certs/kube-service-account-token-key.pem -out ./cluster_certs/kube-service-account-token.pem\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Result:"})," The CSRs and keys will be deployed in ",(0,s.jsx)(t.code,{children:"./cluster_certs"})," directory, assuming you didn't specify a ",(0,s.jsx)(t.code,{children:"--cert-dir"}),". The CSR files will contain the right Alternative DNS and IP Names for the certificates. You can use them to sign the certificates by a real CA. After the certificates are signed, those certificates can be used by RKE as custom certificates."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"$ tree cluster_certs\n\ncluster_certs\n\u251c\u2500\u2500 kube-admin-csr.pem\n\u251c\u2500\u2500 kube-admin-key.pem\n\u251c\u2500\u2500 kube-apiserver-csr.pem\n\u251c\u2500\u2500 kube-apiserver-key.pem\n\u251c\u2500\u2500 kube-apiserver-proxy-client-csr.pem\n\u251c\u2500\u2500 kube-apiserver-proxy-client-key.pem\n\u251c\u2500\u2500 kube-controller-manager-csr.pem\n\u251c\u2500\u2500 kube-controller-manager-key.pem\n\u251c\u2500\u2500 kube-etcd-x-x-x-x-csr.pem\n\u251c\u2500\u2500 kube-etcd-x-x-x-x-key.pem\n\u251c\u2500\u2500 kube-node-csr.pem\n\u251c\u2500\u2500 kube-node-key.pem\n\u251c\u2500\u2500 kube-proxy-csr.pem\n\u251c\u2500\u2500 kube-proxy-key.pem\n\u251c\u2500\u2500 kube-scheduler-csr.pem\n\u251c\u2500\u2500 kube-service-account-token-key.pem\n\u251c\u2500\u2500 kube-service-account-token.pem\n\u2514\u2500\u2500 kube-scheduler-key.pem\n\n0 directories, 18 files\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>d,a:()=>c});var s=r(7294);const n={},i=s.createContext(n);function c(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);